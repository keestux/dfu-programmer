.TH DFU\-PROGRAMMER 1 "Jun 19, 2006" "DFU\-PROGRAMMER" ""
.SH NAME
dfu\-programmer \- USB firmware upgrading for Atmel microcontrollers
.nh
.SH SYNOPSIS
.B dfu\-programmer
target command [options] [parameters]
.SH DESCRIPTION
.B dfu\-programmer
is a Linux command line Device Firmware Upgrade (DFU) based programmer
for the flash memory on Atmel AVR and 8051 based microcontrollers which
ship with a USB boot loader. 
It supports In System Programming (ISP) for developers and potentially
product updates in the field.
Those boot loaders are patterned after the standard USB DFU 1.0 class
specification, but depend on extensions defined by Atmel to the extent
that standard DFU drivers will not work.
.PP
To use it, first connect the device to be programmed and ensure that it
comes up in DFU mode.
The microcontrollers come up in that mode as shipped by Atmel;
or they may reenter that mode after a special hardware reset.
Then invoke this program to issue one or more DFU commands.
You will normally need to start by issuing the "erase" command;
the default security policies prevent extracting firmware, to prevent
reverse engineering of what is usually proprietary code.
.SH SUPPORTED MICROCONTROLLERS 
These chip names are used as the command line "target" parameter.
.IP "8051 based controllers:"
at89c51snd1c, at89c5130, at89c5131, and at89c5132.
.IP "AVR based controllers:"
at90usb1287, at90usb1286, at90usb647, and at90usb646.
.SH USAGE
There are no mechanisms for selecting which single device
should be programmed, or to implement gang programming.
Accordingly, you will usually avoid connecting more than one
device of a given family (AVR or 8051) at a time.
.PP
All of these commands support the "global options".
Unless you override it,
commands which write to the microcontroller will perform 
a validation step that rereads the data which was written,
compares it to the expected result, and reports any errors.
.HP
.B configure
register
[\-\-suppress\-validation]
data
.br
Bootloaders for 8051 based controllers support writing certain
configuration bytes.
.HP
.B dump
.br
Reads all the available flash memory, and writes it as binary
data to stdout.
.HP
.B erase
[\-\-suppress\-validation]
.br
Erases all the flash memory.
This is required before the bootloader will perform other commands.
.HP
.B flash
[\-\-suppress\-validation]
file
.br
Writes flash memory.  The input file must use the "ihex" file
format convention for a memory image.
.HP
.B get
register
.br
Displays various product identifier bytes.
.HP
.B start
.br
Starts the application firmware by having the microcontroller
jump to address zero.
.HP
.B version
.br
This prints a string identifying the version of this utility.
.SS Global Options
\-\-quiet \- minimizes the output

\-\-debug level \- enables verbose output at the specified level
.SS Configure Registers
The standard bootloader for 8051 based chips supports writing
data bytes which are not relevant for the AVR based chips.
.LP
BSB \- boot status byte
.br
SBV \- software boot vector
.br
SSB \- software security byte
.br
EB  \- extra byte
.br
HSB \- hardware security byte
.SS Get Register
bootloader\-version \- currently flashed bootloader version
.br
ID1 \- device boot identification 1
.br
ID2 \- device boot identification 2
.br
manufacturer \- the hardware manufacturer code
.br
family \- the product family code
.br
product\-name \- the product name
.br
product\-revision \- the product revision
.br
HSB \- same as the configure_register version
.br
BSB \- same as the configure_register version
.br
SBV \- same as the configure_register version
.br
SSB \- same as the configure_register version
.br
EB  \- same as the configure_register version
.SH BUGS
At this writing, only the lower 64KB of flash on the larger at90usb parts
can be written.  A protocol command allowing the rest of flash to be written 
is not yet supported.
.PP
Currently this programmer rewrites the entire memory image,
rather than just the portions specified in the hexfile.
.SH AUTHOR
dfu\-programmer and this manual page was written by Weston Schmidt <weston_schmidt@alumni.purdue.edu>
.SH SEE ALSO
.UR http://www.atmel.com
www.atmel.com
.UE
(vendor of the relevant AVR and 8051 microcontrollers)
.br
.UR http://www.libusb.sourceforge.net
www.libusb.sourceforge.net
.UE
(userspace USB library)
.br
.UR http://www.sdcc.sourceforge.net
www.sdcc.sourceforge.net
.UE
(for 8051 based microcontrollers)
.br
.UR http://www.nongnu.org/avr\-libc
www.nongnu.org/avr\-libc
.UE
(for AVR based microcontrollers; use with GCC)
.br
.UR http://www.usb.org
www.usb.org
.UE
(for general USB information)
